basePath: /api/v1
definitions:
  helper.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  helper.ResponsePaged:
    properties:
      data: {}
      message:
        type: string
      page:
        type: integer
      size:
        type: integer
      status:
        type: string
      total:
        type: integer
    type: object
  request.ChangePassword:
    properties:
      password:
        type: string
    type: object
  request.Company:
    properties:
      address:
        type: string
      alias:
        type: string
      code:
        type: string
      giro:
        type: string
      name:
        type: string
    type: object
  request.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  request.Product:
    properties:
      commodity:
        type: string
      company_id:
        type: integer
      description:
        type: string
      expired_at:
        type: string
      is_active:
        type: boolean
      is_pre_order:
        type: boolean
      max_price:
        type: number
      min_price:
        type: number
      name:
        type: string
      price:
        type: number
      product_created_at:
        type: string
      quantity:
        type: integer
      status:
        type: string
      unit_price:
        type: string
      unit_quantity:
        type: string
    type: object
  request.ProductUser:
    properties:
      company_id:
        type: integer
      product_id:
        type: integer
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
  request.Role:
    properties:
      name:
        type: string
    type: object
  request.TransactionPreOrder:
    properties:
      actual_price:
        type: number
      buyer_address:
        type: string
      buyer_contact:
        type: string
      buyer_name:
        type: string
      company_id:
        type: integer
      pari_product_id:
        type: string
      pari_transaction_id:
        type: string
      product_id:
        type: integer
      quantity:
        type: integer
      status:
        type: string
    type: object
  request.TransactionPreOrderUser:
    properties:
      company_id:
        type: integer
      role_id:
        type: integer
      transaction_pre_order_id:
        type: integer
      user_id:
        type: integer
    type: object
  request.User:
    properties:
      company_id:
        type: integer
      email:
        type: string
      must_change_password:
        type: boolean
      name:
        type: string
      password:
        type: string
      role:
        type: string
      verification_level:
        type: integer
    type: object
info:
  contact: {}
  description: PARI Korporat REST API
  title: PARI Korporat
  version: "1.0"
paths:
  /company:
    get:
      consumes:
      - application/json
      description: find all company
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Find All company
      tags:
      - Company
    post:
      consumes:
      - application/json
      description: add new company
      parameters:
      - description: Add company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/request.Company'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Add new company
      tags:
      - Company
  /company/{id}:
    delete:
      consumes:
      - application/json
      description: delete company by id
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete company by id
      tags:
      - Company
    get:
      consumes:
      - application/json
      description: find company by id
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Find company by id
      tags:
      - Company
    put:
      consumes:
      - application/json
      description: update company by id
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: string
      - description: Update company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/request.Company'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: update company by id
      tags:
      - Company
  /login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Login
      tags:
      - Auth
  /product:
    get:
      consumes:
      - application/json
      description: find all product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find All product
      tags:
      - Product
    post:
      consumes:
      - multipart/form-data
      description: add new product
      parameters:
      - description: Upload Image
        in: formData
        name: file
        type: file
      - in: formData
        name: commodity
        type: string
      - in: formData
        name: company_id
        type: integer
      - in: formData
        name: description
        type: string
      - in: formData
        name: expired_at
        type: string
      - in: formData
        name: is_active
        type: boolean
      - in: formData
        name: is_pre_order
        type: boolean
      - in: formData
        name: max_price
        type: number
      - in: formData
        name: min_price
        type: number
      - in: formData
        name: name
        type: string
      - in: formData
        name: price
        type: number
      - in: formData
        name: product_created_at
        type: string
      - in: formData
        name: quantity
        type: integer
      - in: formData
        name: status
        type: string
      - in: formData
        name: unit_price
        type: string
      - in: formData
        name: unit_quantity
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Add new product
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: delete product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Delete product by id
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: find product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find product by id
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: update product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Update product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: update product by id
      tags:
      - Product
  /product/company/{company_id}:
    get:
      consumes:
      - application/json
      description: find all product by company id
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: size
        type: integer
      - description: Status
        in: query
        name: status
        type: string
      - description: Commodity
        in: query
        name: commodity
        type: string
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponsePaged'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find All product by Company ID
      tags:
      - Product
  /product/summary/{company_id}:
    get:
      consumes:
      - application/json
      description: find summary by company id
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find summary by Company ID
      tags:
      - Product
  /product/verification:
    post:
      consumes:
      - application/json
      description: verification product
      parameters:
      - description: Verification Product
        in: body
        name: productUser
        required: true
        schema:
          $ref: '#/definitions/request.ProductUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Verification product
      tags:
      - Product
  /register:
    post:
      consumes:
      - application/json
      description: register
      parameters:
      - description: Register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Register
      tags:
      - Auth
  /register/bulk:
    post:
      consumes:
      - application/json
      description: register
      parameters:
      - description: Register
        in: body
        name: users
        required: true
        schema:
          items:
            $ref: '#/definitions/request.User'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Register
      tags:
      - Auth
  /role:
    get:
      consumes:
      - application/json
      description: find all role
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Find All role
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: add new role
      parameters:
      - description: Add role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/request.Role'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Add new role
      tags:
      - Role
  /role/{id}:
    delete:
      consumes:
      - application/json
      description: delete role by id
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete role by id
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: find role by id
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Find role by id
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: update role by id
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Update role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/request.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: update role by id
      tags:
      - Role
  /token:
    get:
      consumes:
      - application/json
      description: Get Token for Open API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get Token for Open API
      tags:
      - Auth
  /transaction/preorder:
    get:
      consumes:
      - application/json
      description: find all transaction preorder
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find All Transaction PreOrder
      tags:
      - Transaction PreOrder
    post:
      consumes:
      - multipart/form-data
      description: add new transaction pre-order
      parameters:
      - in: formData
        name: actual_price
        type: number
      - in: formData
        name: buyer_address
        type: string
      - in: formData
        name: buyer_contact
        type: string
      - in: formData
        name: buyer_name
        type: string
      - in: formData
        name: company_id
        type: integer
      - in: formData
        name: pari_product_id
        type: string
      - in: formData
        name: pari_transaction_id
        type: string
      - in: formData
        name: product_id
        type: integer
      - in: formData
        name: quantity
        type: integer
      - in: formData
        name: status
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Add new transaction pre-order
      tags:
      - Transaction PreOrder
  /transaction/preorder/{id}:
    delete:
      consumes:
      - application/json
      description: delete transaction pre-order by id
      parameters:
      - description: Transaction PreOrder ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Delete transaction pre-order by id
      tags:
      - Transaction PreOrder
    get:
      consumes:
      - application/json
      description: find transaction pre-order by id
      parameters:
      - description: Transaction PreOrder ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find transaction pre-order by id
      tags:
      - Transaction PreOrder
    put:
      consumes:
      - application/json
      description: update transaction pre-order by id
      parameters:
      - description: Transaction PreOrder ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Transaction PreOrder
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.TransactionPreOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: update transaction pre-order by id
      tags:
      - Transaction PreOrder
  /transaction/preorder/company/{company_id}:
    get:
      consumes:
      - application/json
      description: find all transaction preorder by company id
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: size
        type: integer
      - description: Status
        in: query
        name: status
        type: string
      - description: Commodity
        in: query
        name: commodity
        type: string
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponsePaged'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find All transaction preorder by Company ID
      tags:
      - Transaction PreOrder
  /transaction/preorder/summary/{company_id}:
    get:
      consumes:
      - application/json
      description: find summary by company id
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find summary by Company ID
      tags:
      - Transaction PreOrder
  /transaction/preorder/verification:
    post:
      consumes:
      - application/json
      description: verification transaction pre-order
      parameters:
      - description: Verification Transaction PreOrder
        in: body
        name: transactionPreOrderUser
        required: true
        schema:
          $ref: '#/definitions/request.TransactionPreOrderUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Verification transaction pre-order
      tags:
      - Transaction PreOrder
  /user:
    get:
      consumes:
      - application/json
      description: find all user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find All user
      tags:
      - User
    post:
      consumes:
      - application/json
      description: add new user
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Add new user
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Delete user by id
      tags:
      - User
    get:
      consumes:
      - application/json
      description: find user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Find user by id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: update user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: update user by id
      tags:
      - User
  /user/change_password/{id}:
    put:
      consumes:
      - application/json
      description: add new user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Change Password
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/request.ChangePassword'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Add new user
      tags:
      - User
  /validate_giro/{code}:
    get:
      consumes:
      - application/json
      description: find giro by code
      parameters:
      - description: Giro Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Find giro by code
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
